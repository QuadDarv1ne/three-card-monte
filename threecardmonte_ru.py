import os
import random
import time
import tkinter as tk
from tkinter import messagebox


class TooltipWindow:
    def __init__(self, master, callback):
        self.master = master
        self.callback = callback
        self.tooltip_shown = False

    def show_tooltip(self):
        if not self.tooltip_shown:
            tooltip_window = tk.Toplevel(self.master)
            tooltip_window.title("–ü–æ–¥—Å–∫–∞–∑–∫–∞")

            message = (
                "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–≥—Ä—É: ¬´üé¥–¢—Ä–∏ –∫–∞—Ä—Ç—ã –ú–æ–Ω—Ç–µ¬ª\n\n"
                "–í–∞—à–∞ –∑–∞–¥–∞—á–∞ - –Ω–∞–π—Ç–∏ –¥–∞–º—É —á–µ—Ä–≤–µ–π –ø–æ—Å–ª–µ –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏—è –∫–∞—Ä—Ç.\n\n"
                "–ö–∞–∂–¥–∞—è –∫–∞—Ä—Ç–∞ –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π –∫–æ–ª–æ–¥–µ –∫–∞—Ä—Ç –∏–º–µ–µ—Ç –º–∞—Å—Ç—å –∏ –¥–æ—Å—Ç–æ–∏–Ω—Å—Ç–≤–æ.\n\n"
                "–í –¥–∞–Ω–Ω–æ–π –∏–≥—Ä–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —á–µ—Ç—ã—Ä–µ –º–∞—Å—Ç–∏:\n"
                "‚ô• –ß–µ—Ä–≤—ã (Hearts) - –ò–∑–æ–±—Ä–∞–∂–µ–Ω—ã –∫—Ä–∞—Å–Ω—ã–º–∏ —Å–µ—Ä–¥–µ—á–∫–∞–º–∏.\n"
                "‚ô¶ –ë—É–±–Ω—ã (Diamonds) - –ò–∑–æ–±—Ä–∞–∂–µ–Ω—ã –∫—Ä–∞—Å–Ω—ã–º–∏ —Ä–æ–º–±–∞–º–∏.\n"
                "‚ô† –ü–∏–∫–∏ (Spades) - –ò–∑–æ–±—Ä–∞–∂–µ–Ω—ã —á–µ—Ä–Ω—ã–º–∏ –ª–æ–ø–∞—Ç–∫–∞–º–∏.\n"
                "‚ô£ –¢—Ä–µ—Ñ—ã (Clubs) - –ò–∑–æ–±—Ä–∞–∂–µ–Ω—ã —á–µ—Ä–Ω—ã–º–∏ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞–º–∏.\n\n"
                "–ù–∞–∂–º–∏—Ç–µ \"OK\", —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å."
            )

            text = tk.Text(tooltip_window, wrap="word", font=("Arial", 12), height=15, width=58)
            text.insert("1.0", message)
            text.tag_configure('hearts', foreground='red')
            text.tag_configure('diamonds', foreground='red')
            text.tag_configure('spades', foreground='black')
            text.tag_configure('clubs', foreground='black')

            text.tag_add('hearts', '8.0', '8.17')
            text.tag_add('diamonds', '9.0', '9.18')
            text.tag_add('spades', '11.0', '12.0')
            text.tag_add('clubs', '13.0', '14.0')

            text.config(state=tk.DISABLED)
            text.pack()

            tooltip_window.resizable(width=False, height=False)
            tooltip_window.attributes('-topmost', 1)
            tooltip_window.transient()

            ok_button = tk.Button(tooltip_window, text="OK", command=lambda: [tooltip_window.destroy(), self.callback()])
            ok_button.pack()

            self.tooltip_shown = True


class ThreeCardMonteGame:
    def __init__(self):
        self.root = tk.Tk()
        self.root.withdraw()  # –°–∫—Ä—ã—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–µ –æ–∫–Ω–æ
        self.tooltip_window = TooltipWindow(self.root, self.start_game)
        self.continue_game = True

    def reset_game(self):
        self.continue_game = True
        self.tooltip_window.tooltip_shown = False

    def display_cards(self, cards):
        """
        –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∫–∞—Ä—Ç—ã –∏–∑ —Å–ø–∏—Å–∫–∞ cards –∫–æ—Ä—Ç–µ–∂–µ–π (–¥–æ—Å—Ç–æ–∏–Ω—Å—Ç–≤–æ, –º–∞—Å—Ç—å).
        """
        rows = ['', '', '', '', '']  # –°–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ–∫—Å—Ç –¥–ª—è –≤—ã–≤–æ–¥–∞ –Ω–∞ —ç–∫—Ä–∞–Ω.

        for _ in range(5):
            row = ''
            for i, card in enumerate(cards):
                rank, suit = card  # card –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö ‚Äî –∫–æ—Ä—Ç–µ–∂.
                if _ == 0:
                    row += ' ___ '  # –í—ã–≤–æ–¥–∏–º –≤–µ—Ä—Ö–Ω—é—é –ª–∏–Ω–∏—é –∫–∞—Ä—Ç—ã.
                elif _ == 1:
                    row += '|{} | '.format(rank.ljust(2))
                elif _ == 2:
                    row += '| {} | '.format(suit)
                elif _ == 3:
                    row += '|_{}| '.format(rank.rjust(2, '_'))
            rows[_] = row

        # –ü–æ—Å—Ç—Ä–æ—á–Ω–æ –≤—ã–≤–æ–¥–∏–º –Ω–∞ —ç–∫—Ä–∞–Ω:
        for row in rows:
            print(row)

    def get_random_card(self):
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—É—é –∫–∞—Ä—Ç—É ‚Äî –ù–ï –¥–∞–º—É —á–µ—Ä–≤–µ–π.
        """
        while True:  # –ü–æ–¥–±–∏—Ä–∞–µ–º –∫–∞—Ä—Ç—ã, –ø–æ–∫–∞ –ø–æ–ª—É—á–∏–º –ù–ï –¥–∞–º—É —á–µ—Ä–≤–µ–π.
            rank = random.choice(list('23456789JQKA') + ['10'])
            suit = random.choice(['‚ô•', '‚ô¶', '‚ô†', '‚ô£'])

            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–∞—Ä—Ç—É, –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ –¥–∞–º–∞ —á–µ—Ä–≤–µ–π:
            if rank != 'Q' and suit != '‚ô•':
                return rank, suit

    def start_game(self):
        self.tooltip_window.tooltip_shown = False

        while self.continue_game:
            print('\n' * 8)  # –û—á–∏—Å—Ç–∫–∞ –∫–æ–Ω—Å–æ–ª–∏ (–ø–µ—á–∞—Ç—å 10 –ø—É—Å—Ç—ã—Ö —Å—Ç—Ä–æ–∫)
            print('üé¥ –¢—Ä–∏ –∫–∞—Ä—Ç—ã –ú–æ–Ω—Ç–µ.\nüíº –ê–≤—Ç–æ—Ä: –ú–∞–∫—Å–∏–º –î—É–ø–ª–µ–π\nüìß –ü–æ—á—Ç–∞: maksimqwe42@mail.ru\n')
            print('–ù–∞–π–¥–∏—Ç–µ –¥–∞–º—É —á–µ—Ä–≤–µ–π.')
            print('–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, –∫–∞–∫ –¥–≤–∏–≥–∞—é—Ç—Å—è –∫–∞—Ä—Ç—ã.\n')

            # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏—Å—Ö–æ–¥–Ω—É—é —Ä–∞—Å–∫–ª–∞–¥–∫—É –∫–∞—Ä—Ç:
            cards = [('Q', '‚ô•'), self.get_random_card(), self.get_random_card()]
            random.shuffle(cards)  # –ü–æ–º–µ—â–∞–µ–º –¥–∞–º—É —á–µ—Ä–≤–µ–π –≤ —Å–ª—É—á–∞–π–Ω–æ–µ –º–µ—Å—Ç–æ.
            print('–í–æ—Ç –∫–∞—Ä—Ç—ã:')
            self.display_cards(cards)
            input('–ù–∞–∂–º–∏—Ç–µ Enter, –∫–æ–≥–¥–∞ –±—É–¥–µ—Ç–µ –≥–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å ...')

            # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –Ω–∞ —ç–∫—Ä–∞–Ω–µ –ø–µ—Ä–µ—Ç–∞—Å–æ–≤–∫–∏ –∫–∞—Ä—Ç:
            for _ in range(17):
                swap = random.choice(['l-m', 'm-r', 'l-r', 'm-l', 'r-m', 'r-l'])

                if swap == 'l-m':
                    print('‚óã –ø–µ—Ä–µ—Å—Ç–∞–Ω–æ–≤–∫–∞ –ª–µ–≤–æ–π –∏ —Å—Ä–µ–¥–Ω–µ–π')
                    cards[0], cards[1] = cards[1], cards[0]
                elif swap == 'm-r':
                    print('‚óã –ø–µ—Ä–µ—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ä–µ–¥–Ω–µ–π –∏ –ø—Ä–∞–≤–æ–π')
                    cards[1], cards[2] = cards[2], cards[1]
                elif swap == 'l-r':
                    print('‚óã –ø–µ—Ä–µ—Å—Ç–∞–Ω–æ–≤–∫–∞ –ª–µ–≤–æ–π –∏ –ø—Ä–∞–≤–æ–π')
                    cards[0], cards[2] = cards[2], cards[0]
                elif swap == 'm-l':
                    print('‚óã –ø–µ—Ä–µ—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ä–µ–¥–Ω–µ–π –∏ –ª–µ–≤–æ–π')
                    cards[1], cards[0] = cards[0], cards[1]
                elif swap == 'r-m':
                    print('‚óã –ø–µ—Ä–µ—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∞–≤–æ–π –∏ —Å—Ä–µ–¥–Ω–µ–π')
                    cards[2], cards[1] = cards[1], cards[2]
                elif swap == 'r-l':
                    print('‚óã –ø–µ—Ä–µ—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∞–≤–æ–π –∏ –ª–µ–≤–æ–π')
                    cards[2], cards[0] = cards[0], cards[2]

                time.sleep(0.7)

            # –ü—Ä–æ—Å–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞–π—Ç–∏ –¥–∞–º—É —á–µ—Ä–≤–µ–π:
            while True:
                print('–ü–æ–¥ –∫–∞–∫–æ–π –∫–∞—Ä—Ç–æ–π –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –¥–∞–º–∞ —á–µ—Ä–≤–µ–π? (LEFT MIDDLE RIGHT)')
                guess = input('> ').upper()

                # –ù–∞—Ö–æ–¥–∏–º –∏–Ω–¥–µ–∫—Å –≤ cards –≤–≤–µ–¥–µ–Ω–Ω–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –ø–æ–∑–∏—Ü–∏–∏:
                if guess in ['LEFT', 'MIDDLE', 'RIGHT']:
                    guess_index = ['LEFT', 'MIDDLE', 'RIGHT'].index(guess)
                    break

                self.display_cards(cards)  # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –≤—Å–µ –∫–∞—Ä—Ç—ã.

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—ã–∏–≥—Ä–∞–ª –ª–∏ –∏–≥—Ä–æ–∫:
            if cards[guess_index] == ('Q', '‚ô•'):
                print('–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏')
            else:
                print('–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏')

            # –°–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–∏ –∏–≥—Ä—ã:
            response = input('\n–•–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å –µ—â–µ —Ä–∞–∑? (–¥–∞/–Ω–µ—Ç): ').lower()
            if response == '–Ω–µ—Ç':
                print('–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–≥—Ä—É :D')
                self.continue_game = False
                self.root.destroy()  # –ó–∞–∫—Ä—ã—Ç–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –æ–∫–Ω–∞ Tkinter


if __name__ == "__main__":
    game = ThreeCardMonteGame()
    game.tooltip_window.show_tooltip()
    game.root.mainloop()  # –ó–∞–ø—É—Å–∫ Tkinter mainloop

# üóìÔ∏è –î–∞—Ç–∞: 01.12.2023